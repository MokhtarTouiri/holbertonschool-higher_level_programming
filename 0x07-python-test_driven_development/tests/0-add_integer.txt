""" FILE TEST """

import function
>>> add_integer = __import__('0-add_integer').add_integer

test with 2 integers:
    >>> add_integer(1, 2)
    3

>>> add_integer(1, add_integer(1, 1))
    3

>>> add_integer(6, 3+1)
    9

Float, float:
	>>> add_integer(3.88, 6.17)
	9

test with list of integers:
    >>> add_integer(1, (1, 2, 3))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

test with negative number:
    >>> add_integer(70.3, -2)
    68
    >>> add_integer(16, -16.5)
    0

Str, int:
	>>> add_integer("I am a string", 5)
        Traceback (most recent call last):
        ...
		raise TypeError("a must be an integer")
        TypeError: a must be an integer

None, none:
	>>> add_integer(None, None)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

test with bool:
    >>> add_integer(1, True)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

test auto b:
    >>> add_integer(2.2)
    100

test with non(integers/floats):
    >>> add_integer(4, "school")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

test with non(integers/floats):
    >>> add_integer("school", 4)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

t with integer and float:
    >>> add_integer(4, 5.32)
    9

test auto b:
    >>> add_integer(2.2)
    100

No args:
	>>> add_integer()
	Traceback (most recent call last):
 	...
	TypeError: add_integer() missing 1 required positional argument: 'a'

Inf, int:
	>>> add_integer(float('inf'), 1)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(float("NaN"), 1)
	Traceback (most recent call last):
        ...
        ValueError: cannot convert float NaN to integer

test with list of integers:
    >>> add_integer(1, (1, 2, 3))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
